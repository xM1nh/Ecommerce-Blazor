@page "/add-category"

@implements IDisposable
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="MyCategory" Enhance OnValidSubmit="HandleSaveCategory">
                 <DataAnnotationsValidator />
                 <ValidationSummary />
                 <div class="card">
                     <div class="card-header">Add Category</div>
                     <div class="card-body">
                         <div class="form-group">
                             <label class="form-label">Name</label>
                             <InputText @bind-Value="MyCategory.Name" class="form-control"></InputText>
                         </div>
                     </div>
                     <div class="card-footer">
                         <div class="form-group mt-3">
                            @if (messageDialogService.ShowSaveButton)
                            {
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="fa fa-plus"></i>
                                    Save Category
                                </button>
                            }
                            <BusyButtonComponent ShowBusyButton="messageDialogService.ShowBusyButton"></BusyButtonComponent>
                        </div>

                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>
<MessageDialog @ref="messageDialogService.messageDialog"></MessageDialog>

@code {
    Category MyCategory = new();

    protected override void OnInitialized()
    {
        messageDialogService.Action += StateHasChanged;
    }

    async Task HandleSaveCategory()
    {
        messageDialogService.ShowSaveButton = false;
        messageDialogService.ShowBusyButton = true;

        var (flag, message) = await CategoryService.AddCategory(MyCategory);

        if (flag)
        {
            messageDialogService.messageDialog!.SetDialogValues("success", message);
        }
        else
        {
            messageDialogService.messageDialog!.SetDialogValues("danger", message);
        }
        messageDialogService.SetMessageDialog();
        return;
    }

    public void Dispose()
    {
        messageDialogService.Action -= StateHasChanged;
    }
}